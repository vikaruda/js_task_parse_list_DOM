{"mappings":"ACGA,SAAS,EAAsB,CAAM,EACnC,MAAO,CAAC,EAAO,OAAO,CAAC,UAAW,GACpC,CA4BA,IAzBQ,EAWA,EAcF,EAAkB,SAAS,gBAAgB,CAAC,mBAtBhD,CAHM,EAAY,MAAM,IAAI,CA4BrB,IAzBG,IAAI,CAAC,SAAC,CAAA,CAAG,CAAnB,EACE,IAAM,EAAU,EAAsB,EAAE,OAAO,CAAC,MAAM,EAGtD,OAAO,AAFS,EAAsB,EAAE,OAAO,CAAC,MAAM,EAErC,CACnB,GAKA,CAFM,EAAK,SAAS,aAAa,CAAC,OAE/B,SAAS,CAAG,GACf,EAAU,OAAO,CAAC,SAAC,CAAnB,EAA4B,OAAA,EAAG,WAAW,CAAC,E,GAmB7C,QAAQ,GAAG,CAdF,MAAM,IAAI,CAWY,GAXM,GAAG,CAAC,SAAC,CAAxC,EAAkD,MAAA,CAChD,KAAM,EAAK,WAAW,CAAC,IAAI,EAC7B,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// Функція для конвертації зарплати в число\nfunction convertSalaryToNumber(salary) {\n    return +salary.replace(/[^0-9]/g, \"\");\n}\nfunction sortList(listProperty) {\n    var listArray = Array.from(listProperty);\n    // Сортуємо масив за зарплатою\n    listArray.sort(function(a, b) {\n        var salaryA = convertSalaryToNumber(a.dataset.salary);\n        var salaryB = convertSalaryToNumber(b.dataset.salary);\n        return salaryB - salaryA; // Сортування у спадному порядку\n    });\n    // Оновлюємо DOM: очищаємо існуючі елементи і додаємо відсортовані\n    var ul = document.querySelector(\"ul\");\n    ul.innerHTML = \"\"; // Очищаємо існуючі елементи\n    listArray.forEach(function(item) {\n        return ul.appendChild(item);\n    });\n}\n// Функція для отримання співробітників як масиву об'єктів\nfunction getEmployees(listPropertyTwo) {\n    return Array.from(listPropertyTwo).map(function(item) {\n        return {\n            name: item.textContent.trim()\n        };\n    });\n}\n// Отримуємо всі елементи списку з атрибутом data-salary\nvar allListEmployee = document.querySelectorAll(\"li[data-salary]\");\n// Викликаємо функції\nsortList(allListEmployee);\nvar employees = getEmployees(allListEmployee);\n// eslint-disable-next-line no-console\nconsole.log(employees);\n\n//# sourceMappingURL=index.f7ee5975.js.map\n","'use strict';\n\n// Функція для конвертації зарплати в число\nfunction convertSalaryToNumber(salary) {\n  return +salary.replace(/[^0-9]/g, '');\n}\n\nfunction sortList(listProperty) {\n  const listArray = Array.from(listProperty);\n\n  // Сортуємо масив за зарплатою\n  listArray.sort((a, b) => {\n    const salaryA = convertSalaryToNumber(a.dataset.salary);\n    const salaryB = convertSalaryToNumber(b.dataset.salary);\n\n    return salaryB - salaryA; // Сортування у спадному порядку\n  });\n\n  // Оновлюємо DOM: очищаємо існуючі елементи і додаємо відсортовані\n  const ul = document.querySelector('ul');\n\n  ul.innerHTML = ''; // Очищаємо існуючі елементи\n  listArray.forEach((item) => ul.appendChild(item));\n}\n\n// Функція для отримання співробітників як масиву об'єктів\nfunction getEmployees(listPropertyTwo) {\n  return Array.from(listPropertyTwo).map((item) => ({\n    name: item.textContent.trim(),\n  }));\n}\n\n// Отримуємо всі елементи списку з атрибутом data-salary\nconst allListEmployee = document.querySelectorAll('li[data-salary]');\n\n// Викликаємо функції\nsortList(allListEmployee);\n\nconst employees = getEmployees(allListEmployee);\n\n// eslint-disable-next-line no-console\nconsole.log(employees);\n"],"names":["convertSalaryToNumber","salary","replace","listArray","ul","allListEmployee","document","querySelectorAll","Array","from","sort","a","b","salaryA","dataset","salaryB","querySelector","innerHTML","forEach","item","appendChild","console","log","map","name","textContent","trim"],"version":3,"file":"index.f7ee5975.js.map"}